/* CVS $Id: $ */
package de.fuberlin.wiwiss.d2rq.vocab;

import org.apache.jena.rdf.model.Property;
import org.apache.jena.rdf.model.Resource;
import org.apache.jena.rdf.model.ResourceFactory;

/**
 * Vocabulary definitions from file:doc/terms/config.ttl
 *
 * @author Auto-generated by schemagen on 03 Jun 2012 07:05
 */
@SuppressWarnings("unused")
public class D2RConfig {

    /**
     * <p>The namespace of the vocabulary as a string</p>
     */
    public static final String NS = "http://sites.wiwiss.fu-berlin.de/suhl/bizer/d2r-server/config.rdf#";

    /**
     * <p>The namespace of the vocabulary as a string</p>
     *
     * @see #NS
     * @return String
     */
    public static String getURI() {
        return NS;
    }

    /**
     * <p>Whether D2R Server should check for an updated mapping file with every request.</p>
     */
    public static final Property autoReloadMapping = property("autoReloadMapping");

    /**
     * <p>Base URI for a D2R Server installation; the URI of the running server's start
     * page.</p>
     */
    public static final Property baseURI = property("baseURI");

    /**
     * <p>A RDF dataset metadata template.</p>
     */
    public static final Property datasetMetadataTemplate = property("datasetMetadataTemplate");

    /**
     * <p>A template resource whose properties will be attached as metadata to all RDF
     * documents published by a D2R Server installation.</p>
     */
    public static final Property documentMetadata = property("documentMetadata");

    /**
     * <p>Whether to enable all metadata generation.</p>
     */
    public static final Property enableMetadata = property("enableMetadata");

    /**
     * <p>Maximum number of values for each class map that will be displayed in the
     * web interface when browsing resources. A value of false means no limit.</p>
     */
    public static final Property limitPerClassMap = property("limitPerClassMap");

    /**
     * <p>Maximum number of values for each property bridge that will be displayed in
     * the web interface when browsing resources. A value of false means no limit.</p>
     */
    public static final Property limitPerPropertyBridge = property("limitPerPropertyBridge");

    /**
     * <p>A RDF metadata template.</p>
     */
    public static final Property metadataTemplate = property("metadataTemplate");

    /**
     * <p>Timeout for generating HTML pages and RDF descriptions, in seconds. 0 for
     * no timeout.</p>
     */
    public static final Property pageTimeout = property("pageTimeout");

    /**
     * <p>The TCP port on which a D2R Server installation listens.</p>
     */
    public static final Property port = property("port");

    /**
     * <p>The D2RQ-mapped database that is published by a D2R Server installation.</p>
     */
    public static final Property publishes = property("publishes");

    /**
     * <p>Timeout for executing SPARQL queries, in seconds. 0 for no timeout.</p>
     */
    public static final Property sparqlTimeout = property("sparqlTimeout");

    /**
     * <p>Whether views of vocabulary resources should include instance data.</p>
     */
    public static final Property vocabularyIncludeInstances = property("vocabularyIncludeInstances");

    /**
     * <p>A configuration for a D2R Server installation.</p>
     */
    public static final Resource Server = resource("Server");

    protected static Resource resource(String localName) {
        return ResourceFactory.createResource(NS + localName);
    }

    protected static Property property(String localName) {
        return ResourceFactory.createProperty(NS + localName);
    }

}
