@prefix map: <file:/Users/richard/D2RQ/workspace/D2RQ/doc/example/mapping-iswc.ttl#> .
@prefix vocab: <vocab/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix iswc: <http://annotation.semanticweb.org/iswc/iswc.daml#> .
@prefix vcard: <http://www.w3.org/2001/vcard-rdf/3.0#> .
@prefix jdbc: <http://d2rq.org/terms/jdbc/> .

map:database a d2rq:Database;
	d2rq:jdbcDriver "org.postgresql.Driver";
	d2rq:jdbcDSN "jdbc:postgresql://localhost:5432/iswc";
	d2rq:username "postgres";
	d2rq:password "";
	.

# Table conferences
map:Conferences a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "conferences/@@conferences.confid@@";
	d2rq:class iswc:Conference;

	# Some unrelated properties to test class definitions
	d2rq:classDefinitionLabel "conference";
	d2rq:classDefinitionComment "A conference";
	d2rq:additionalClassDefinitionProperty map:conferenceSubClassOf;
	.

map:conferences_Name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Conferences;
	d2rq:property rdfs:label;
	d2rq:column "conferences.name";

	# Some properties to test property definitions
	d2rq:propertyDefinitionLabel "label";
	d2rq:propertyDefinitionComment "A human-readable name for the subject.";
	d2rq:additionalPropertyDefinitionProperty map:labelDomain;
	.
map:conferences_Date a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Conferences;
	d2rq:property dc:date;
	d2rq:column "conferences.date";
	.
map:conferences_Location a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Conferences;
	d2rq:property iswc:location;
	d2rq:column "conferences.location";
	.
map:conferences_Datum a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Conferences;
	d2rq:property vocab:startDate;
	d2rq:column "conferences.datum";
	d2rq:datatype xsd:dateTime;
	d2rq:condition "conferences.datum is not null";
	.

# Table organizations
map:Organizations a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "organizations/@@organizations.orgid@@";
	d2rq:class iswc:Organization;
	.
map:organization_Type_U a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Organizations;
	d2rq:property rdf:type;
    d2rq:uriPattern "http://annotation.semanticweb.org/iswc/iswc.daml#University";
    d2rq:condition "organizations.type = 'U'";
	.
map:organization_Type_D a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Organizations;
	d2rq:property rdf:type;
    d2rq:uriPattern "http://annotation.semanticweb.org/iswc/iswc.daml#Department";
    d2rq:condition "organizations.type = 'D'";
	.
map:organization_Type_I a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Organizations;
	d2rq:property rdf:type;
    d2rq:uriPattern "http://annotation.semanticweb.org/iswc/iswc.daml#Institute";
    d2rq:condition "organizations.type = 'I'";
	.
map:organization_Name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Organizations;
	d2rq:property rdfs:label;
	d2rq:column "organizations.name";
	.
map:organization_Homepage a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Organizations;
	d2rq:property foaf:homepage;
	d2rq:uriColumn "organizations.homepage";
	.
map:organization_ADR a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:Organizations;
    d2rq:property vcard:ADR;
    d2rq:refersToClassMap map:PostalAddresses;
    .

# Postal addresses of organizations
map:PostalAddresses a d2rq:ClassMap;
    d2rq:dataStorage map:database;
    d2rq:bNodeIdColumns "organizations.orgid";
    .
map:addresses_Address a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:PostalAddresses;
    d2rq:property vcard:Street;
    d2rq:column "organizations.address";
    .
map:addresses_Location a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PostalAddresses;
	d2rq:property vcard:Locality;
	d2rq:column "organizations.location";
	.
map:addresses_Postcode a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PostalAddresses;
	d2rq:property vcard:Pcode;
	d2rq:column "organizations.postcode";
	.
map:addresses_Country a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PostalAddresses;
	d2rq:property vcard:Country;
	d2rq:column "organizations.country";
	.

# Table papers
map:Papers a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "papers/@@papers.paperid@@";
    d2rq:condition "papers.publish = 1";
	d2rq:class iswc:InProceedings;
    d2rq:class foaf:Document;
	.
map:papers_Title a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Papers;
	d2rq:property dc:title;
	d2rq:column "papers.title";
	d2rq:lang "en";
	.
map:papers_Abstract a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Papers;
    d2rq:property dcterms:abstract;
	d2rq:column "papers.abstract";
	.
map:papers_Abstract_Download a d2rq:PropertyBridge, d2rq:DownloadMap;
    d2rq:belongsToClassMap map:Papers;
    d2rq:uriPattern "papers/@@papers.paperid@@/abstract";
    d2rq:contentDownloadColumn "papers.abstract";
    d2rq:property vocab:textAbstract;
    d2rq:mediaType "text/plain";
    .
map:papers_Year a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Papers;
	d2rq:property dc:date;
    d2rq:column "papers.year";
	d2rq:datatype xsd:gYear;
	.
map:papers_Conference a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Papers;
	d2rq:property iswc:conference;
	d2rq:refersToClassMap map:Conferences;
	d2rq:join "papers.conference = conferences.confid";
	.
# Table rel_paper_topic
map:rel_paper_topic1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Papers;
    d2rq:property skos:primarySubject;
    d2rq:property skos:subject;
    d2rq:refersToClassMap map:Topics;
	d2rq:condition "rel_paper_topic.relationtype = 1";
	d2rq:join "rel_paper_topic.paperid = papers.paperid";
	d2rq:join "rel_paper_topic.topicid = topics.topicid";
	.
map:rel_paper_topic2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Papers;
    d2rq:property skos:subject;
    d2rq:refersToClassMap map:Topics;
	d2rq:condition "rel_paper_topic.relationtype = 2";
	d2rq:join "rel_paper_topic.paperid = papers.paperid";
	d2rq:join "rel_paper_topic.topicid = topics.topicid";
	.
# n:m table rel_person_paper
map:rel_person_paper a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Papers;
	d2rq:property dc:creator;
	d2rq:refersToClassMap map:Persons;
	d2rq:join "persons.perid = rel_person_paper.personid";
	d2rq:join "rel_person_paper.paperid = papers.paperid";
	.

# Table persons
map:Persons a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "persons/@@persons.perid@@";
	d2rq:class foaf:Person;
	.
map:persons_Type a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Persons;
	d2rq:property rdf:type;
	d2rq:uriPattern "http://annotation.semanticweb.org/iswc/iswc.daml#@@persons.type@@";
	.
map:persons_Name a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Persons;
	d2rq:property foaf:name;
    d2rq:property rdfs:label;
	d2rq:pattern "@@persons.firstname@@ @@persons.lastname@@";
	.
map:persons_Address a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Persons;
	d2rq:property iswc:address;
	d2rq:column "persons.address";
	.
map:persons_Email a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Persons;
	d2rq:property foaf:mbox;
	d2rq:uriPattern "mailto:@@persons.email@@";
	.
map:persons_Homepage a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Persons;
	d2rq:property foaf:homepage;
	d2rq:uriColumn "persons.homepage";
	.
map:persons_Phone a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Persons;
	d2rq:property iswc:phone;
	d2rq:column "persons.phone";
	.
map:persons_Photo a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Persons;
	d2rq:property foaf:depiction;
	d2rq:uriColumn "persons.photo";
	.
# n:m table rel_person_topic
map:rel_person_topic a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Persons;
	d2rq:property iswc:research_interests;
	d2rq:refersToClassMap map:Topics;
	d2rq:join "persons.perid = rel_person_topic.personid";
	d2rq:join "rel_person_topic.topicid = topics.topicid";
	.
# n:m table rel_person_organization
map:rel_person_organization a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Persons;
	d2rq:property iswc:has_affiliation;
	d2rq:refersToClassMap map:Organizations;
	d2rq:join "persons.perid = rel_person_organization.personid";
	d2rq:join "rel_person_organization.organizationid= organizations.orgid";
	.

# Table topics
map:Topics a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "topics/@@topics.topicid@@";
	.
map:topics_Type a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:Topics;
    d2rq:property rdf:type;
    d2rq:constantValue skos:Concept;
    .
map:topics_TopicName a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Topics;
	d2rq:property skos:prefLabel;
	d2rq:column "topics.topicname";
	d2rq:datatype xsd:string;
	.
map:topics_URI a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Topics;
	d2rq:property owl:sameAs;
	d2rq:uriColumn "topics.uri";
	.
map:topics_ParentID a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:Topics;
    d2rq:property skos:broader;
    d2rq:refersToClassMap map:Topics;
    d2rq:join "topics.parentid = parenttopics.topicid";
    d2rq:alias "topics as parenttopics";
    .

# Unrelated property definitions for testing
map:conferenceSubClassOf a d2rq:AdditionalProperty;
	d2rq:propertyName rdfs:subClassOf;
	d2rq:propertyValue iswc:Event;
	.

map:labelDomain a d2rq:AdditionalProperty;
	d2rq:propertyName rdfs:domain;
	d2rq:propertyValue rdfs:Resource;
	.
